name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions: write-all

jobs:
  save-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: git clone
        run: git clone --depth 1 https://github.com/volcano-sh/volcano.git
      - name: make images
        run: cd volcano; make images
      - name: show tag
        run: cd volcano; git rev-parse HEAD
      - name: webhook manager
        run: cd volcano; docker save volcanosh/vc-webhook-manager:$(git rev-parse HEAD) -o ../webhook-manager.tar.gz
      - name: scheduler
        run: cd volcano; docker save volcanosh/vc-scheduler:$(git rev-parse HEAD) -o ../scheduler.tar.gz
      - name: controller manager
        run: cd volcano; docker save volcanosh/vc-controller-manager:$(git rev-parse HEAD) -o ../controller-manager.tar.gz
      - uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag release
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest

      # Creates the new release with the binary as a release asset.
      # If the previous Action was skipped, then this keeps the same tag as the
      # previous release.
      - name: Create new release
        uses: softprops/action-gh-release@v1
        with:
          body: latest
          name: latest
          tag_name: latest
          files: |
            controller-manager.tar.gz
            scheduler.tar.gz
            webhook-manager.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
